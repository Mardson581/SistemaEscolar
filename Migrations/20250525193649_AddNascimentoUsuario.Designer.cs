// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaEscolar.Data;

#nullable disable

namespace SistemaEscolar.Migrations
{
    [DbContext(typeof(DbEscolar))]
    [Migration("20250525193649_AddNascimentoUsuario")]
    partial class AddNascimentoUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.15");

            modelBuilder.Entity("ProfessorTurma", b =>
                {
                    b.Property<long>("ProfessoresUsuarioId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TurmasIdTurma")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProfessoresUsuarioId", "TurmasIdTurma");

                    b.HasIndex("TurmasIdTurma");

                    b.ToTable("ProfessorTurma");
                });

            modelBuilder.Entity("SistemaEscolar.Models.Aluno", b =>
                {
                    b.Property<long>("IdAluno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("IdTurma")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Matricula")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Nascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("RA")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdAluno");

                    b.HasIndex("IdTurma");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("SistemaEscolar.Models.Escola", b =>
                {
                    b.Property<long>("IdEscola")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("DiretorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("MunicipioId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("SecretarioId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdEscola");

                    b.HasIndex("DiretorId")
                        .IsUnique();

                    b.HasIndex("MunicipioId");

                    b.HasIndex("SecretarioId");

                    b.ToTable("Escolas");

                    b.HasData(
                        new
                        {
                            IdEscola = 1L,
                            CEP = "12315808",
                            DiretorId = 1L,
                            Endereco = "Nada",
                            MunicipioId = 1L,
                            Nome = "Escola Teste",
                            SecretarioId = 1L,
                            Telefone = "(17)91234-5678"
                        });
                });

            modelBuilder.Entity("SistemaEscolar.Models.Municipio", b =>
                {
                    b.Property<long>("IdMunicipio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdMunicipio");

                    b.ToTable("Municipios");

                    b.HasData(
                        new
                        {
                            IdMunicipio = 1L,
                            Estado = "SP",
                            Nome = "São José do Rio Preto"
                        });
                });

            modelBuilder.Entity("SistemaEscolar.Models.Turma", b =>
                {
                    b.Property<long>("IdTurma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<short>("Ano")
                        .HasColumnType("INTEGER");

                    b.Property<long>("EscolaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdTurma");

                    b.HasIndex("EscolaId");

                    b.ToTable("Turmas");

                    b.HasData(
                        new
                        {
                            IdTurma = 1L,
                            Ano = (short)2025,
                            EscolaId = 1L,
                            Nome = "1º Ano"
                        });
                });

            modelBuilder.Entity("SistemaEscolar.Models.Usuario", b =>
                {
                    b.Property<long>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Nascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuario");

                    b.HasDiscriminator<string>("TipoUsuario").HasValue("Usuario");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("SistemaEscolar.Models.Diretor", b =>
                {
                    b.HasBaseType("SistemaEscolar.Models.Usuario");

                    b.Property<long>("EscolaId")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Diretor");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1L,
                            Email = "dezani@email.com",
                            Nascimento = new DateOnly(1, 1, 1),
                            Nome = "Dezani",
                            Senha = "12345678",
                            Telefone = "(17)91234-5678",
                            EscolaId = 0L
                        });
                });

            modelBuilder.Entity("SistemaEscolar.Models.Professor", b =>
                {
                    b.HasBaseType("SistemaEscolar.Models.Usuario");

                    b.HasDiscriminator().HasValue("Professor");
                });

            modelBuilder.Entity("SistemaEscolar.Models.Secretario", b =>
                {
                    b.HasBaseType("SistemaEscolar.Models.Usuario");

                    b.HasDiscriminator().HasValue("Secretario");

                    b.HasData(
                        new
                        {
                            UsuarioId = 2L,
                            Email = "dezani@email.com",
                            Nascimento = new DateOnly(1, 1, 1),
                            Nome = "Dezani",
                            Senha = "12345678",
                            Telefone = "(17)91234-5678"
                        });
                });

            modelBuilder.Entity("ProfessorTurma", b =>
                {
                    b.HasOne("SistemaEscolar.Models.Professor", null)
                        .WithMany()
                        .HasForeignKey("ProfessoresUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaEscolar.Models.Turma", null)
                        .WithMany()
                        .HasForeignKey("TurmasIdTurma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SistemaEscolar.Models.Aluno", b =>
                {
                    b.HasOne("SistemaEscolar.Models.Turma", "Turma")
                        .WithMany("Alunos")
                        .HasForeignKey("IdTurma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("SistemaEscolar.Models.Escola", b =>
                {
                    b.HasOne("SistemaEscolar.Models.Diretor", "Diretor")
                        .WithOne("Escola")
                        .HasForeignKey("SistemaEscolar.Models.Escola", "DiretorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("SistemaEscolar.Models.Municipio", "Municipio")
                        .WithMany("Escolas")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SistemaEscolar.Models.Secretario", "Secretario")
                        .WithMany("Escolas")
                        .HasForeignKey("SecretarioId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Diretor");

                    b.Navigation("Municipio");

                    b.Navigation("Secretario");
                });

            modelBuilder.Entity("SistemaEscolar.Models.Turma", b =>
                {
                    b.HasOne("SistemaEscolar.Models.Escola", "Escola")
                        .WithMany("Turmas")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("SistemaEscolar.Models.Escola", b =>
                {
                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("SistemaEscolar.Models.Municipio", b =>
                {
                    b.Navigation("Escolas");
                });

            modelBuilder.Entity("SistemaEscolar.Models.Turma", b =>
                {
                    b.Navigation("Alunos");
                });

            modelBuilder.Entity("SistemaEscolar.Models.Diretor", b =>
                {
                    b.Navigation("Escola");
                });

            modelBuilder.Entity("SistemaEscolar.Models.Secretario", b =>
                {
                    b.Navigation("Escolas");
                });
#pragma warning restore 612, 618
        }
    }
}
